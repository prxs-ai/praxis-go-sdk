services:
  praxis-agent-1:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: praxis-agent-1
    hostname: praxis-agent-1
    environment:
      - AGENT_NAME=praxis-agent-1
      - AGENT_VERSION=1.0.0
      - HTTP_PORT=8000
      - P2P_PORT=4001
      - SSE_PORT=8090
      - MCP_ENABLED=true
      - LOG_LEVEL=info
      # - OPENAI_API_KEY=${OPENAI_API_KEY}  # Add your OpenAI API key for LLM features
    ports:
      - "8000:8000"  # Main API
      - "4001:4001"  # P2P
      - "8090:8090"  # MCP SSE Server
      - "9100:9000"  # WebSocket Gateway
    volumes:
      - node1-data:/data
      - ./shared:/shared  # Shared volume for file operations
    networks:
      - mcp-network
    command: ["./praxis-agent"]
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  praxis-agent-2:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: praxis-agent-2
    hostname: praxis-agent-2
    environment:
      - AGENT_NAME=praxis-agent-2
      - AGENT_VERSION=1.0.0
      - HTTP_PORT=8001
      - P2P_PORT=4002
      - SSE_PORT=8091
      - MCP_ENABLED=true
      - LOG_LEVEL=info
      - BOOTSTRAP_PEERS=/ip4/praxis-agent-1/tcp/4001
      # - OPENAI_API_KEY=${OPENAI_API_KEY}  # Not needed for P2P/MCP operations
    ports:
      - "8001:8001"  # Main API
      - "4002:4002"  # P2P
      - "8091:8091"  # MCP SSE Server
      - "9102:9000"  # WebSocket Gateway
    volumes:
      - node2-data:/data
      - ./shared:/shared  # Shared volume for file operations
    networks:
      - mcp-network
    command: ["./praxis-agent"]
    depends_on:
      praxis-agent-1:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8001/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

networks:
  mcp-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16

volumes:
  node1-data:
    driver: local
  node2-data:
    driver: local
  shared:
    driver: local
